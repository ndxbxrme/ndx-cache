{
  "version": 3,
  "file": "index.js",
  "sourceRoot": "../src/",
  "sources": [
    "index.coffee"
  ],
  "names": [],
  "mappings": "AAAA;EAAA;AAAA,MAAA;;EACA,MAAA,GAAS,OAAA,CAAQ,eAAR;;EACT,MAAM,CAAC,OAAP,GAAiB,QAAA,CAAC,GAAD,CAAA;AACf,QAAA,cAAA,EAAA,KAAA,EAAA,SAAA,EAAA,OAAA,EAAA,aAAA,EAAA;IAAA,cAAA,GAAiB;IACjB,KAAA,GAAQ,CAAA;IACR,SAAA,GAAY;IACZ,aAAA,GAAgB,QAAA,CAAC,IAAD,CAAA;MACd,IAAG,IAAH;eACE;UAAA,IAAA,EAAM,IAAI,CAAC,IAAX;UACA,IAAA,EAAM,IAAI,CAAC;QADX,EADF;OAAA,MAAA;eAIE;UAAA,IAAA,EAAM;QAAN,EAJF;;IADc;IAMhB,OAAA,GAAU,QAAA,CAAC,GAAD,CAAA;aACR,IAAI,CAAC,SAAL,CAAe,GAAf;IADQ;IAEV,QAAA,GAAW,QAAA,CAAA,CAAA;MACT,KAAA,GAAQ,CAAA;aACR,SAAA,GAAY;IAFH;WAGX,GAAG,CAAC,KAAJ,GACE;MAAA,OAAA,EAAS,QAAA,CAAC,IAAD,CAAA;eACP,cAAA,GAAiB;MADV,CAAT;MAEA,aAAA,EAAe,QAAA,CAAC,EAAD,CAAA;eACb,aAAA,GAAgB;MADH,CAFf;MAIA,GAAA,EAAK,QAAA,CAAC,KAAD,EAAQ,KAAR,EAAe,IAAf,EAAqB,OAArB,CAAA;AACH,YAAA,WAAA,EAAA;QAAA,IAAG,SAAA,GAAY,cAAf;UACE,QAAA,CAAA,EADF;;QAEA,IAAG,CAAI,KAAM,CAAA,KAAA,CAAb;UACE,KAAM,CAAA,KAAA,CAAN,GACE;YAAA,IAAA,EAAM;UAAN,EAFJ;;QAGA,WAAA,GAAc,OAAA,CAAQ,aAAA,CAAc,IAAd,CAAR;QACd,IAAG,CAAI,KAAM,CAAA,KAAA,CAAO,CAAA,WAAA,CAApB;UACE,KAAM,CAAA,KAAA,CAAO,CAAA,WAAA,CAAb,GAA4B,CAAA,EAD9B;;QAEA,SAAA,GAAY,OAAA,CAAQ,KAAR;QACZ,IAAG,CAAI,KAAM,CAAA,KAAA,CAAO,CAAA,WAAA,CAAa,CAAA,SAAA,CAAjC;UACE,KAAM,CAAA,KAAA,CAAM,CAAC,IAAb,GADF;;QAEA,SAAA;QACA,KAAM,CAAA,KAAA,CAAO,CAAA,WAAA,CAAa,CAAA,SAAA,CAA1B,GAAuC;MAbpC,CAJL;MAmBA,GAAA,EAAK,QAAA,CAAC,KAAD,EAAQ,KAAR,EAAe,IAAf,CAAA;AACH,YAAA,WAAA,EAAA,SAAA,EAAA,GAAA,EAAA;QAAA,WAAA,GAAc,OAAA,CAAQ,aAAA,CAAc,IAAd,CAAR;QACd,SAAA,GAAY,OAAA,CAAQ,KAAR;sFACgB,CAAA,SAAA;MAHzB,CAnBL;MAuBA,KAAA,EAAO,QAAA,CAAC,KAAD,CAAA;QACL,IAAG,KAAM,CAAA,KAAA,CAAT;UACE,SAAA,IAAa,KAAM,CAAA,KAAA,CAAM,CAAC,KAD5B;;QAEA,KAAM,CAAA,KAAA,CAAN,GACE;UAAA,IAAA,EAAM;QAAN;MAJG,CAvBP;MA6BA,SAAA,EAAW,QAAA,CAAA,CAAA;eACT;MADS,CA7BX;MA+BA,YAAA,EAAc,QAAA,CAAA,CAAA;eACZ,MAAA,CAAO,KAAP;MADY;IA/Bd;EAhBa;AAFjB",
  "sourcesContent": [
    "'use strict'\r\nsizeof = require 'object-sizeof'\r\nmodule.exports = (ndx) ->\r\n  MAX_CACHE_SIZE = 1000\r\n  cache = {}\r\n  cacheSize = 0\r\n  permissionsFn = (user) ->\r\n    if user\r\n      type: user.type\r\n      role: user.role\r\n    else\r\n      type: 'server'\r\n  hashObj = (obj) ->\r\n    JSON.stringify obj\r\n  resetAll = ->\r\n    cache = {}\r\n    cacheSize = 0\r\n  ndx.cache =\r\n    maxSize: (size) ->\r\n      MAX_CACHE_SIZE = size\r\n    permissionsFn: (fn) ->\r\n      permissionsFn = fn\r\n    set: (table, query, user, results) ->\r\n      if cacheSize > MAX_CACHE_SIZE\r\n        resetAll()\r\n      if not cache[table]\r\n        cache[table] =\r\n          size: 0\r\n      permissions = hashObj permissionsFn user\r\n      if not cache[table][permissions]\r\n        cache[table][permissions] = {}\r\n      queryHash = hashObj query\r\n      if not cache[table][permissions][queryHash]\r\n        cache[table].size++\r\n      cacheSize++\r\n      cache[table][permissions][queryHash] = results\r\n      return\r\n    get: (table, query, user) ->\r\n      permissions = hashObj permissionsFn user\r\n      queryHash = hashObj query\r\n      cache[table]?[permissions]?[queryHash]\r\n    reset: (table) ->\r\n      if cache[table]\r\n        cacheSize -= cache[table].size\r\n      cache[table] =\r\n        size: 0\r\n      return\r\n    getLength: ->\r\n      cacheSize\r\n    getSizeBytes: ->\r\n      sizeof cache"
  ]
}